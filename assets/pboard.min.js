const pKeyboard_config={layout_text:[{"ض":{name:"ض",text:"ض",shiftText:"ً",class:"pKKey"},"ص":{name:"ص",text:"ص",shiftText:"ٌ",class:"pKKey"},"ث":{name:"ث",text:"ث",shiftText:"ٍ",class:"pKKey"},"ق":{name:"ق",text:"ق",shiftText:"ريال",class:"pKKey"},"ف":{name:"ف",text:"ف",shiftText:"،",class:"pKKey"},"غ":{name:"غ",text:"غ",shiftText:"؛",class:"pKKey"},"ع":{name:"ع",text:"ع",shiftText:",",class:"pKKey"},"ه":{name:"ه",text:"ه",shiftText:"]",class:"pKKey"},"خ":{name:"خ",text:"خ",shiftText:"[",class:"pKKey"},"ح":{name:"ح",text:"ح",shiftText:"\\",class:"pKKey"},"ج":{name:"ج",text:"ج",shiftText:"}",class:"pKKey"},"چ":{name:"چ",text:"چ",shiftText:"{",class:"pKKey"}},{"ش":{name:"ش",text:"ش",shiftText:"َ",class:"pKKey"},"س":{name:"س",text:"س",shiftText:"ُ",class:"pKKey"},"ی":{name:"ی",text:"ی",shiftText:"ِ",class:"pKKey"},"ب":{name:"ب",text:"ب",shiftText:"ّ",class:"pKKey"},"ل":{name:"ل",text:"ل",shiftText:"ّ",class:"pKKey"},"ا":{name:"ا",text:"ا",shiftText:"ۀ",class:"pKKey"},"ت":{name:"ت",text:"ت",shiftText:"آ",class:"pKKey"},"ن":{name:"ن",text:"ن",shiftText:"ـ",class:"pKKey"},"م":{name:"م",text:"م",shiftText:"«",class:"pKKey"},"ی":{name:"ی",text:"ی",shiftText:"»",class:"pKKey"},"ک":{name:"ک",text:"ک",shiftText:":",class:"pKKey"},"گ":{name:"گ",text:"گ",shiftText:'"',class:"pKKey"},return:{name:"return",text:"Enter",class:"pKFunction"}},{shift:{name:"shift",text:"",class:"pKFunction"},"ظ":{name:"ظ",text:"ظ",shiftText:"ة",class:"pKKey"},"ط":{name:"ط",text:"ط",shiftText:"ي",class:"pKKey"},"ز":{name:"ز",text:"ز",shiftText:"ژ",class:"pKKey"},"ر":{name:"ر",text:"ر",shiftText:"ؤ",class:"pKKey"},"ذ":{name:"ذ",text:"ذ",shiftText:"إ",class:"pKKey"},"د":{name:"د",text:"د",shiftText:"أ",class:"pKKey"},"ئ":{name:"ئ",text:"ئ",shiftText:"ء",class:"pKKey"},"و":{name:"و",text:"و",shiftText:"<",class:"pKKey"},"و":{name:".",text:".",shiftText:">",class:"pKKey"}},{clear:{name:"clear",text:"",class:"pKFunction"},space:{name:"space",text:" ",class:"pKKey"},backspace:{name:"backspace",text:"",class:"pKFunction"}}],layout_numeric:[{1:{name:"1",text:"1",class:"pKKey"},2:{name:"2",text:"2",class:"pKKey"},3:{name:"3",text:"3",class:"pKKey"}},{4:{name:"4",text:"4",class:"pKKey"},5:{name:"5",text:"5",class:"pKKey"},6:{name:"6",text:"6",class:"pKKey"}},{7:{name:"7",text:"7",class:"pKKey"},8:{name:"8",text:"8",class:"pKKey"},9:{name:"9",text:"9",class:"pKKey"}},{clear:{name:"clear",text:"",class:"pKFunction"},return:{name:"return",text:"Enter",class:"pKFunction"}}],layout_tel:[{1:{name:"1",text:"1",class:"pKKey"},2:{name:"2",text:"2",class:"pKKey"},3:{name:"3",text:"3",class:"pKKey"}},{4:{name:"4",text:"4",class:"pKKey"},5:{name:"5",text:"5",class:"pKKey"},6:{name:"6",text:"6",class:"pKKey"}},{7:{name:"7",text:"7",class:"pKKey"},8:{name:"8",text:"8",class:"pKKey"},9:{name:"9",text:"9",class:"pKKey"}},{space:{name:"space",text:" ",class:"pKKey"},backspace:{name:"backspace",text:"",class:"pKFunction"}}]};let shiftActive=!1;const pKeyboard=e=>{const t=document.getElementById("pkeyboard-container");t.innerHTML="",e.forEach((e=>{const s=document.createElement("ul");s.classList.add("pK","pKLine"),t.appendChild(s),Object.entries(e).forEach((([e,t])=>{const{name:n,text:c,shiftText:l,class:i}=t,K=document.createElement("li");K.classList.add("pK",i,`pKey-${n}`),K.textContent=shiftActive&&l?l:c,K.addEventListener("click",a),s.appendChild(K)}))}));const s=()=>{shiftActive=!shiftActive,pKeyboard(pKeyboard_config.layout_text)};function a(e){if(e.target.closest("#pkeyboard-container")){const t=e.target;if(t.classList.contains("pKey-shift"))return void s();const a=document.querySelector("input[data-pkeyboard]:focus"),n=Object.hasOwn(a,"selectionStart")?a.selectionStart:a.value.length,c=Object.hasOwn(a,"selectionEnd")?a.selectionEnd:a.value.length,l=a.value.substring(0,n),i=a.value.substring(c),K=a.getAttribute("maxlength");if(t.classList.contains("pKFunction")){if(t.classList.contains("pKey-backspace"))n===c?(a.value=l.slice(0,-1)+i,a.setSelectionRange(n-1,n-1)):(a.value=l+i,a.setSelectionRange(n,n));else if(t.classList.contains("pKey-clear"))a.value="";else if(t.classList.contains("pKey-return"))return a.dispatchEvent(new KeyboardEvent("keydown",{key:"Enter"})),a.dispatchEvent(new KeyboardEvent("keypress",{key:"Enter"})),a.dispatchEvent(new KeyboardEvent("keyup",{key:"Enter"})),void a.blur()}else if(t.classList.contains("pKKey")){const e=t.textContent;(!K||l.length+e.length+i.length<=K)&&(Object.hasOwn(a,"setSelectionRange")?(a.value=l+e+i,a.setSelectionRange(n+e.length,n+e.length)):a.value=l+e)}shiftActive&&s(),a.focus()}}},initPKeyboardContainer=()=>{const e=document.createElement("div");e.id="pkeyboard-container",document.body.appendChild(e),e.addEventListener("mousedown",(e=>{e.preventDefault()})),pKeyboard(pKeyboard_config.layout_text)},updatePKeyboardLayout=e=>{const t=e.getAttribute("type"),s=e.getAttribute("inputmode");let a;a="number"===t||"numeric"===s?pKeyboard_config.layout_numeric:"tel"===t?pKeyboard_config.layout_tel:pKeyboard_config.layout_text,pKeyboard(a)},PKaddFocusListeners=()=>{document.querySelectorAll("input[data-pkeyboard]").forEach((e=>{e.addEventListener("focus",(()=>{updatePKeyboardLayout(e),document.getElementById("pkeyboard-container").style.display="block"})),e.addEventListener("blur",(()=>{document.getElementById("pkeyboard-container").style.display="none"}))}))};document.addEventListener("DOMContentLoaded",(()=>{initPKeyboardContainer(),document.querySelectorAll("input[data-pkeyboard]").forEach((e=>{e.addEventListener("focus",(()=>{updatePKeyboardLayout(e),document.getElementById("pkeyboard-container").style.display="block"})),e.addEventListener("blur",(()=>{document.getElementById("pkeyboard-container").style.display="none"}))}))}));